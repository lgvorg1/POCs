# This is a basic workflow to help you get started with Actions 

name: Xygeni CI/CD Security Scan

# Controls when the workflow will run
on:
  push: 
    branches: [ "main" ]
  # Triggers the workflow on pull request events for the "main" branch
  pull_request_target: 
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab sd 
  workflow_dispatch:
    inputs:
      xy-env:
          type: choice
          description: Xygeni Env
          options: 
          - PRO
          - DEMO
          - PARTNERS
          default: PRO
 
env:
  
  XY_ENV: ${{ github.event_name == 'push' && 'PRO' || github.event.inputs.xy-env }}
  XY_PRJ_NAME: GitHub-${{ github.event.repository.name }}


jobs:
  # This workflow contains a single job called "xygeni_security_scan"
  xygeni_cicd_scan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    # ref: "refs/pull/${{ github.event.number }}/merge"
    # ref: ${{ github.event.pull_request.head.sha }}
  
    steps:

      - name: Set Xygeni env 
        run: |

          case "$XY_ENV" in 
            PRO)
              echo "PRO"
              echo XY_USERNAME=${{ secrets.XY_USERNAME_PRO }} >> $GITHUB_ENV
              echo XY_PASSWORD=${{ secrets.XY_PASSWORD_PRO }} >> $GITHUB_ENV
              echo XY_TOKEN=${{ secrets.XY_TOKEN_PRO }} >> $GITHUB_ENV
              echo XY_URL=${{ secrets.XY_URL_PRO }} >> $GITHUB_ENV
              ;;
            DEMO)
              echo "DEMO"
              echo XY_USERNAME=${{ secrets.XY_USERNAME_DEMO }} >> $GITHUB_ENV
              echo XY_PASSWORD=${{ secrets.XY_PASSWORD_DEMO }} >> $GITHUB_ENV
              echo XY_URL=${{ secrets.XY_URL_DEMO }} >> $GITHUB_ENV
              ;;
            PARTNERS)
              echo "PARTNERS"
              echo XY_USERNAME=${{ secrets.XY_USERNAME_PARTNERS }} >> $GITHUB_ENV
              echo XY_PASSWORD=${{ secrets.XY_PASSWORD_PARTNERS }} >> $GITHUB_ENV
              echo XY_URL=${{ secrets.XY_URL_PARTNERS }} >> $GITHUB_ENV
              ;;
            *)
              echo "DEFAULT (PRO)"
              echo XY_USERNAME=${{ secrets.XY_USERNAME_PRO }} >> $GITHUB_ENV
              echo XY_PASSWORD=${{ secrets.XY_PASSWORD_PRO }} >> $GITHUB_ENV
              echo XY_URL=${{ secrets.XY_URL_PRO }} >> $GITHUB_ENV
              ;;
          esac



      # Runs a set of commands using the runners shell   
      - name: Scan repo list 
        run: |
          #!/bin/bash

          declare -a repo_list=(
                          "https://github.com/lgvorg1/secrets_local.git"
                          "https://github.com/lgvorg1/cicd_top10_1.git"
                          )

          chmod +x ./scan_repo_list.sh           
          ./scan_repo_list.sh -d ${GITHUB_WORKSPACE} -x $XY_TOKEN -c github -p my_cicd_token -z "${repo_list[*]}"


