
variables:
    vGITLAB_TOKEN: "${GITLAB_TOKEN}"
    vXY_TOKEN: "${XY_TOKEN}"


stages:          # List of stages for jobs, and their order of execution 
  - BuildStage
  - XygeniScan
  #- test
  #- deploy


Xygeni-job:
  stage: XygeniScan
  #image: ubuntu@sha256:55e5613c8c7bcd8044aaf09d64d20518964a0d7a6e41af129f95b731301c2659
  #image: alpine@sha256:71465c7d45a086a2181ce33bb47f7eaef5c233eace65704da0c5e5454a79cee5
  #image: maven:3-jdk-11
  image: ubuntu-latest
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_PIPELINE_SOURCE == "merge_request_event"'
  #rules:
  #  - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  #rules:
  #  - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  variables:
    MY_VAR: "true"

  script:
    - |
      #!/bin/bash
      echo "First command line."
      echo "Second command line."
      echo "Third command line."
      declare -a repo_list=(
                          "https://github.com/lgvorg1/secrets_local.git"
                          "https://github.com/lgvorg1/cicd_top10_1.git"
                          )

      chmod +x ./scan_repo_list.sh           
      ./scan_repo_list.sh -d . -x $vXY_TOKEN -c github -p $vGITLAB_TOKEN -z "${repo_list[*]}"

  #needs: ["build-job"]
    #- cat ./scanner/conf/misconfigurations/unprotected_branch.yml
    #- ./scanner/xygeni util conf-update
    #- cat ./scanner/conf/misconfigurations/unprotected_branch.yml

push-build-job:       # This job runs in the build stage, which runs first.
  stage: BuildStage
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  script:
    - echo "Building the code (main)..."
    - echo CI_COMMIT_BRANCH $CI_COMMIT_BRANCH
    - echo CI_DEFAULT_BRANCH $CI_DEFAULT_BRANCH
    - echo CI_PIPELINE_SOURCE $CI_PIPELINE_SOURCE
    - echo "Build complete."


mr-build-job:       # This job runs in the build stage, which runs first.
  stage: BuildStage
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - echo "Building the code (pr)..."
    - echo CI_COMMIT_BRANCH $CI_COMMIT_BRANCH
    - echo CI_DEFAULT_BRANCH $CI_DEFAULT_BRANCH
    - echo CI_PIPELINE_SOURCE $CI_PIPELINE_SOURCE
    - echo $CI_MERGE_REQUEST_TITLE
    - echo "$CI_MERGE_REQUEST_TITLE"
    - echo -e "$CI_MERGE_REQUEST_TITLE"
    - echo '$CI_MERGE_REQUEST_TITLE'
    - echo "Build complete."





